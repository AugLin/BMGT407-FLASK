name: CI/CD Pipeline for Flask
on:
  push:
    branches:
      - main  # Change this to match your main branch

jobs:
  deploy:
    runs-on: Linux  # Change to Linux runner
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Python from Source
        run: |
          sudo apt update
          sudo apt install -y build-essential zlib1g-dev \
            libncurses5-dev libgdbm-dev libnss3-dev \
            libssl-dev libreadline-dev libffi-dev curl
          curl -O https://www.python.org/ftp/python/3.12.2/Python-3.12.2.tgz
          tar -xf Python-3.12.2.tgz
          cd Python-3.12.2
          ./configure --enable-optimizations
          make -j $(nproc)
          sudo make altinstall
          python3.12 -m ensurepip
          python3.12 -m pip install --upgrade pip

      - name: Verify Python Installation
        run: |
          python3.12 --version
          python3.12 -m pip --version


      - name: Create and Activate Virtual Environment
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt


      - name: Deploy to School Server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          PROJECT_DIR: "/home/${{ secrets.SERVER_USER }}/public_html"  # Adjust path for Linux
        run: |
          # Save SSH private key
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem

          # Deploy using rsync over SSH
          rsync -avz --delete -e "ssh -i private_key.pem -o StrictHostKeyChecking=no" . $SERVER_USER@$SERVER_IP:$PROJECT_DIR

          # Restart Flask app
          ssh -i private_key.pem -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP << EOF
            cd $PROJECT_DIR
            pkill -f 'flask run' || true
            nohup flask run --host=0.0.0.0 --port=5000 > flask.log 2>&1 &
          EOF

          # Clean up the private key file
          rm -f private_key.pem
